<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>How DevOps is like auto racing</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/-ar2OlcuuBE/" /><category term="DevOps" /><author><name>Chris Short</name></author><id>https://developers.redhat.com/blog/?p=620727</id><updated>2019-08-22T07:01:54Z</updated><published>2019-08-22T07:01:54Z</published><content type="html">&lt;p&gt;When I talk about desired outcomes or answer a question about where to get started with any part of a &lt;a href="https://developers.redhat.com/topics/devops/"&gt;DevOps&lt;/a&gt; initiative, I like to mention NASCAR or Formula 1 racing. Crew chiefs for these race teams have a goal: finish in the best place possible with the resources available while overcoming the adversity thrown at you. If the team feels capable, the goal gets moved up a series of levels to holding a trophy at the end of the race.&lt;/p&gt; &lt;p&gt;To achieve their goals, race teams don&amp;#8217;t think from start to finish; they flip the table to look at the race from the end goal to the beginning. They set a goal, a stretch goal, and then work backward from that goal to determine how to get there. Work is delegated to team members to push toward the objectives that will get the team to the desired outcome.&lt;span id="more-620727"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;Team roles and goals&lt;/h3&gt; &lt;p&gt;The teams work with the physics they know (fuel economy, tire wear, etc.), a safe set of known challenges (pit stops, other drivers impeding progress, etc.), and what I like to refer to as an adversity budget. If you put 100% of effort into keeping the car in pristine condition to win, your team will fail. One dropped lug nut on a tire change will impact factors between that moment and the desired outcome. Adversity budget is like an SRE error budget, but it&amp;#8217;s way more art than science.&lt;/p&gt; &lt;p&gt;Everyone on the team knows they have a part to play on race day (from the owner to marketing to crew chief to engineer to pit lane sweeper). There are roles and responsibilities, communication protocols, disaster expectations, and many other business functions humming along in the background. And, everyone knows where they can help if there is a deficiency (like &lt;a href="https://devops.com/youre-not-devops-cant-pull-cord/"&gt;pulling the Andon cord&lt;/a&gt; and swarming in DevOps) or even worse, an incident (crash). An engineer in charge of aerodynamics is engaged when there is an issue impacting airflow over the vehicle. Another engineer will get involved if vibration starts in a particular part of the vehicle. The team on pit lane works to assemble the parts and pieces needed to repair the vehicle as it makes its way to the pit lane.&lt;/p&gt; &lt;p&gt;During a race, as laps get cranked out, several factors impact a team&amp;#8217;s desired outcome, and all the factors are accounted for and acted on where necessary. What are the weather conditions? How are tires wearing? How is the performance of the vehicle as measured by countless metrics? What&amp;#8217;s the feedback from the driver? What&amp;#8217;s the output of the data showing us compared to the drivers&amp;#8217; feedback? What feedback can we give the driver to make them feel 100% confident in the equipment they&amp;#8217;re using to push toward their individual goals? What are our competitors are doing? Now we have to make a pit stop a little ahead of schedule.&lt;/p&gt; &lt;h3&gt;Pit stops are like releases&lt;/h3&gt; &lt;p&gt;Pit stops are what I like to think of as releases. Race teams know they&amp;#8217;ll have to pit a certain number of times for various reasons. But, when that schedule is affected, calculus occurs to address the rest of the race. In Formula 1 racing, using flammable fuel on pit row is too dangerous, so they&amp;#8217;ve designed an entire system to eliminate mid-race refueling. If there is something inherently dangerous in a release process for a piece of software, that factor should either be minimized or worked out of the system entirely.&lt;/p&gt; &lt;p&gt;Conversely, in NASCAR, the dangerous process of refueling has been addressed in a different way. Putting the safeguards and processes in place to make the person jumping over a wall with a 40-pound gas can feel as confident as possible is critical. Think about what they&amp;#8217;re doing. This person is connecting a can of fuel to a hot car with its engine running. Meanwhile, people are running around changing tires, adjusting handling, and so forth. The psychological safety of every team member is essential. But, the ones sent to do more unsafe things should have a forgiving and rapid response system around them in the event of a catastrophe. That response system will remove them from harm while the team adjusts accordingly to its desired outcome. The team will believe in that system because it will be practiced 1000 times before it&amp;#8217;s employed once.&lt;/p&gt; &lt;h3&gt;Practice and train&lt;/h3&gt; &lt;p&gt;Race teams practice pit stops all week before the race. They do weight training and cardio programs to stay physically ready for the grueling conditions of race day. They are continually collaborating to address any issue that comes up. Software teams should also practice software releases often. If safety systems are in place and practice runs have been going well, they can release to production more frequently. Speed makes things safer in this mindset. It&amp;#8217;s not about doing the &amp;#8220;right&amp;#8221; thing; it&amp;#8217;s about addressing as many blockers to the desired outcome (goal) as possible and then collaborating and adjusting based on the real-time feedback that&amp;#8217;s observed. Expecting anomalies and working to improve quality and minimize the impact of those anomalies is the expectation of everyone in a DevOps world.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#38;linkname=How%20DevOps%20is%20like%20auto%20racing" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Fhow-devops-is-like-auto-racing%2F&amp;#038;title=How%20DevOps%20is%20like%20auto%20racing" data-a2a-url="https://developers.redhat.com/blog/2019/08/22/how-devops-is-like-auto-racing/" data-a2a-title="How DevOps is like auto racing"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/22/how-devops-is-like-auto-racing/"&gt;How DevOps is like auto racing&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/-ar2OlcuuBE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;When I talk about desired outcomes or answer a question about where to get started with any part of a DevOps initiative, I like to mention NASCAR or Formula 1 racing. Crew chiefs for these race teams have a goal: finish in the best place possible with the resources available while overcoming the adversity thrown [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/22/how-devops-is-like-auto-racing/"&gt;How DevOps is like auto racing&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/08/22/how-devops-is-like-auto-racing/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">620727</post-id><dc:creator>Chris Short</dc:creator><dc:date>2019-08-22T07:01:54Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/08/22/how-devops-is-like-auto-racing/</feedburner:origLink></entry><entry><title>Troubleshooting Red Hat OpenShift applications with throwaway containers</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/VQWUK0ddBp0/" /><category term="Containers" /><category term="Kubernetes" /><category term="OpenShift" /><category term="Red Hat Enterprise Linux" /><category term="containers" /><category term="Red Hat OpenShift" /><category term="troubleshooting" /><author><name>Fernando Lozano</name></author><id>https://developers.redhat.com/blog/?p=619217</id><updated>2019-08-22T07:00:38Z</updated><published>2019-08-22T07:00:38Z</published><content type="html">&lt;p&gt;Imagine this scenario: Your cool microservice works fine from your local machine but fails when deployed into your &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; cluster. You cannot see anything wrong with the code or anything wrong in your services, configuration maps, secrets, and other resources. But, you know something is not right. How do you look at things from the same perspective as your containerized application? How do you compare the runtime environment from your local application with the one from your container?&lt;/p&gt; &lt;p&gt;If you performed your due diligence, you wrote unit tests. There are no hard-coded configurations or hidden assumptions about the runtime environment. The cause should be related to the configuration your application receives inside OpenShift. Is it time to run your app under a step-by-step debugger or add tons of logging statements to your code?&lt;/p&gt; &lt;p&gt;We&amp;#8217;ll show how two features of the OpenShift command-line client can help: the &lt;code&gt;oc run&lt;/code&gt; and &lt;code&gt;oc debug&lt;/code&gt; commands.&lt;span id="more-619217"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Starting throwaway containers on Red Hat OpenShift&lt;/h2&gt; &lt;p&gt;Most developers think about containers and OpenShift only for running long-lived applications. You create deployment configurations, stateful sets, or cron jobs that stay alive forever, creating and re-creating pods as required. Your application is always on, or at least on at fixed intervals.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;oc run&lt;/code&gt; command runs containers that perform a single task and then die. It creates unmanaged containers, that OpenShift does not replace when they die.&lt;/p&gt; &lt;p&gt;I once had an application that talked to a legacy database outside of my OpenShift cluster. The application was able to access the database from my local machine, but not from OpenShift. I needed the ability to test access to the database from inside OpenShift. This way I could find out whether I got the correct environment variables. I would also see whether the container could resolve the database’s host name. Maybe there was a firewall blocking access to the database?&lt;/p&gt; &lt;p&gt;This is a perfect scenario for the &lt;code&gt;oc run&lt;/code&gt; command. Just start a pod running the database container image. From that pod, you can use the database client and OS commands to troubleshoot configuration network connectivity. After a few quick tests, you don&amp;#8217;t need the pod anymore.&lt;/p&gt; &lt;pre&gt;$ oc run -it test --rm --restart Never \ --image registry.access.redhat.com/rhscl/mysql-57-rhel7 bash &lt;/pre&gt; &lt;p&gt;The previous command gives me an interactive (&lt;code&gt;-it&lt;/code&gt;) Bash prompt on a pod named test. OpenShift never restarts this pod (&lt;code&gt;--restart Never&lt;/code&gt;) and removes it when terminated (&lt;code&gt;--rm&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;The MySQL database image from Red Hat (rhscl/mysql-57-rhel7) provides the MySQL client and a few other useful commands, such as dig and host. With this, I can check that I can resolve the server host name, connect to the database, and verify my access credentials.&lt;/p&gt; &lt;h2&gt;Starting throwaway containers for management clients&lt;/h2&gt; &lt;p&gt;I could start the MySQL client, or any other command available from that container image, directly from the &lt;code&gt;oc run&lt;/code&gt; command. For example:&lt;/p&gt; &lt;pre&gt;$ oc run -it test --rm --restart Never \ --image registry.access.redhat.com/rhscl/mysql-57-rhel7 \ -- mysql -umydbuser -pmydbpassword -hmyserver.domain.example.com mydb&lt;/pre&gt; &lt;p&gt;Note the use of a double dash (&lt;code&gt;--&lt;/code&gt;) to prevent the &lt;code&gt;oc run&lt;/code&gt; command from interpreting the command options intended for the MySQL client. In the previous command, there is no &lt;code&gt;--mysql&lt;/code&gt; option; there is a space between &lt;code&gt;--&lt;/code&gt; and &lt;code&gt;mysql&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;As another example, I could start the same throwaway container from the first example, then use another terminal to copy a SQL script into the container using the &lt;code&gt;oc cp&lt;/code&gt; command. Then I can run the SQL script using the throwaway container shell.&lt;/p&gt; &lt;p&gt;Because the MySQL client can take SQL scripts from the standard input, I could just add input redirection to the second example and be done. I just populated a test database. What about doing this from a shell script or an Ansible playbook, while I do not write that fancy operator that would deploy and initialize the database for my application?&lt;/p&gt; &lt;p&gt;Thanks to the &lt;code&gt;oc run&lt;/code&gt; command, I can use administration clients embedded into many container images, for example, the CLI administration tools for JBoss EAP, AMQ, and single-sign on. I do not need to install any of them on my local machine. Cool, isn’t it?&lt;/p&gt; &lt;h2&gt;Cloning a deployment to a debug container&lt;/h2&gt; &lt;p&gt;I could add more command-line options to the &lt;code&gt;oc run&lt;/code&gt; command and replicate all the settings of an existing deployment: environment variables, resource limits, and so on. If my intent were to replicate the runtime environment of my application, this would be too much work and be prone to errors.&lt;/p&gt; &lt;p&gt;However, this would be a scenario for the &lt;code&gt;oc debug&lt;/code&gt; command. It creates a new pod that is a carbon copy of an existing pod. If your pod does not start for whatever reason, you can create the copy from its deployment configuration.&lt;/p&gt; &lt;p&gt;Suppose that I created my application using &lt;code&gt;oc new-app&lt;/code&gt; and named it &lt;code&gt;myapp&lt;/code&gt;. To create a debug pod from its deployment configuration, I would use the following command:&lt;/p&gt; &lt;pre&gt;$ oc debug -t dc/myapp&lt;/pre&gt; &lt;p&gt;I get a Bash shell running under the same restraints as my application: uid, SElinux context, environment variables, and the same container image.&lt;/p&gt; &lt;p&gt;If I suspect that some of these restraints may be causing a failure, I can selectively override them using options from the &lt;code&gt;oc debug&lt;/code&gt; command. For example, adding the &lt;code&gt;--as-root&lt;/code&gt; option to the previous example gives me a root prompt inside the pod, but only if my OpenShift user has access to a security context constraint that allows me to do so.&lt;/p&gt; &lt;p&gt;The debug pod runs with health probes disabled. I can start my application manually to check whether the health probes are incorrect and forcing my pod to terminate. I could add options to the &lt;code&gt;oc debug&lt;/code&gt; command to enable health probes, disable init containers, disable sidecar containers, change labels that affect pod scheduling, and thus find which, if any, of the deployment settings are not correct for my application.&lt;/p&gt; &lt;h2&gt;Starting throwaway containers with RHEL tools container images&lt;/h2&gt; &lt;p&gt;As with the &lt;code&gt;oc run&lt;/code&gt; command, your actions using the &lt;code&gt;oc debug&lt;/code&gt; command are limited by what is included with your application container image. Fortunately, you can override the container image in your debug container. Good candidates are the rhel7/tools and the rhel8/support-tools container images from Red Hat.&lt;/p&gt; &lt;pre&gt;$ oc debug -t dc/myapp \ --image registry.access.redhat.com/rhel7/rhel-tools&lt;/pre&gt; &lt;p&gt;These images provide access to standard RHEL troubleshooting commands that would not be included in most application images, for example, the &lt;code&gt;ping&lt;/code&gt; and &lt;code&gt;dig&lt;/code&gt; commands.&lt;/p&gt; &lt;p&gt;You&amp;#8217;ll need to download the rhel8/support-tools container image from the Red Hat terms-based registry (redhat.registry.io). Access to the terms-based registry requires a pull secret. Follow the instructions from &lt;a href="https://access.redhat.com/containers/?tab=images&amp;#38;get-method=registry-tokens#/registry.access.redhat.com/rhel8/support-tools"&gt;Red Hat Enterprise Linux Support Tools&lt;/a&gt; if needed.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;You do not need a local container engine to run throwaway containers that perform troubleshooting and one-time tasks. You can run these containers quickly and easily on Red Hat OpenShift using the &lt;code&gt;oc run&lt;/code&gt; and &lt;code&gt;oc debug&lt;/code&gt; commands. And, your OpenShift cluster, if it is not a Minishift instance, is probably quicker to download container images and likely has more storage space and better bandwidth than your local workstation.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#38;linkname=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F22%2Ftroubleshooting-red-hat-openshift-applications-with-throwaway-containers%2F&amp;#038;title=Troubleshooting%20Red%20Hat%20OpenShift%20applications%20with%20throwaway%20containers" data-a2a-url="https://developers.redhat.com/blog/2019/08/22/troubleshooting-red-hat-openshift-applications-with-throwaway-containers/" data-a2a-title="Troubleshooting Red Hat OpenShift applications with throwaway containers"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/22/troubleshooting-red-hat-openshift-applications-with-throwaway-containers/"&gt;Troubleshooting Red Hat OpenShift applications with throwaway containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/VQWUK0ddBp0" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Imagine this scenario: Your cool microservice works fine from your local machine but fails when deployed into your Red Hat OpenShift cluster. You cannot see anything wrong with the code or anything wrong in your services, configuration maps, secrets, and other resources. But, you know something is not right. How do you look at things [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/22/troubleshooting-red-hat-openshift-applications-with-throwaway-containers/"&gt;Troubleshooting Red Hat OpenShift applications with throwaway containers&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/08/22/troubleshooting-red-hat-openshift-applications-with-throwaway-containers/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">619217</post-id><dc:creator>Fernando Lozano</dc:creator><dc:date>2019-08-22T07:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/08/22/troubleshooting-red-hat-openshift-applications-with-throwaway-containers/</feedburner:origLink></entry><entry><title>Why you should be developing on Red Hat Enterprise Linux</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NEs-_Hx4mWQ/" /><category term="Linux" /><category term="Operating System" /><category term="Red Hat Enterprise Linux" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=620767</id><updated>2019-08-21T07:01:41Z</updated><published>2019-08-21T07:01:41Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/topics/linux/"&gt;Red Hat Enterprise Linux&lt;/a&gt; through &lt;a href="https://developers.redhat.com/register/"&gt;Red Hat Developer&lt;/a&gt; is designed specifically so that software can be developed on the same platform to which will be deployed—and here’s why it’s the best option for you.&lt;/p&gt; &lt;h2&gt;No-cost developer access&lt;/h2&gt; &lt;p&gt;With a $0 Red Hat Developer membership, you get access to Red Hat Enterprise Linux (RHEL) at no cost. We have &lt;a href="https://developers.redhat.com/products/rhel/download"&gt;downloads available for RHEL&lt;/a&gt; versions starting as far back as 7.2, and as &lt;a href="https://developers.redhat.com/rhel8/"&gt;current as RHEL 8.1 Beta&lt;/a&gt;. The subscription costs nothing, and there are no additional costs for any of the software or content we make available through the program.&lt;/p&gt; &lt;h2&gt;RHEL is RHEL is RHEL&lt;/h2&gt; &lt;p&gt;The Red Hat Enterprise Linux you download from the Developer program is exactly the same RHEL you get with any other subscription. No, it’s not a trial. No, it’s not a preview. No, we haven’t disabled any features that you can enable with a paid subscription. Really—we want you to use this and be successful, so we don’t throw any surprises or weird workarounds at you.&lt;/p&gt; &lt;h2&gt;Deployment simplicity&lt;/h2&gt; &lt;p&gt;When you’re developing an application, you want to make sure you avoid unexpected snags. Developing an application on RHEL that will be deployed to a Red Hat Enterprise Linux platform helps you avoid surprises. If you code on the same version of RHEL you’re deploying to, all of your dependencies and runtime versions will be there. Remember when I said, “RHEL is RHEL is RHEL”?&lt;/p&gt; &lt;h2&gt;Red Hat Customer Portal access&lt;/h2&gt; &lt;p&gt;This is a major advantage of the Developer membership—full access to &lt;a href="https://access.redhat.com/"&gt;Red Hat Customer Portal&lt;/a&gt;. You get access to information about all of our products. Again, there’s nothing limited to “paid subscriptions”—no paywall anywhere—it’s all in the open with the membership. This information lets you address issues, see best practices, get self-service support, and get questions answered—and get it all straight from Red Hat.&lt;/p&gt; &lt;h2&gt;RHEL excels&lt;/h2&gt; &lt;p&gt;I want to talk a little more about why Red Hat Enterprise Linux is fantastic, too.&lt;/p&gt; &lt;h3&gt;Linux for enterprises&lt;/h3&gt; &lt;p&gt;Our customers range from huge, multinational corporations, to the classic “two developers and a dog” startups, but they all have something in common: They need their platform to be &lt;i&gt;enterprise grade&lt;/i&gt;. The &lt;a href="https://www.redhat.com/en/success-stories"&gt;big customers&lt;/a&gt; need their platforms to be rock solid, manageable, scalable, secure, and compliant with regulations. And the small startup with big dreams needs the same thing.&lt;/p&gt; &lt;h3&gt;Stable&lt;/h3&gt; &lt;p&gt;Stable can mean a couple things: the operating system doesn’t fail, or the operating system has a long lifecycle and can be depended on for a long time. Right now, I’m talking about the latter. When you decide to use RHEL, you’re getting an operating system with a &lt;a href="https://access.redhat.com/support/policy/updates/errata"&gt;published, 10-year lifecycle&lt;/a&gt;.&lt;/p&gt; &lt;h3&gt;Red Hat Enterprise Linux for continuous IT security&lt;/h3&gt; &lt;p&gt;Because our customers demand it, we build RHEL to support &lt;a href="https://www.redhat.com/en/technologies/guide/it-security"&gt;continuous IT security&lt;/a&gt;. The built-in protection of our compile-time options, our security backporting practice, our stronger defaults for best-practices cryptographic algorithms, stack smashing protection, ASLR, verification of patch and package updates, and SELinux turned on by default are all examples of how seriously we take this.&lt;/p&gt; &lt;h3&gt;Runtimes&lt;/h3&gt; &lt;p&gt;We include a full set of languages and runtimes, with stability and security in mind. Long lifecycle runtimes—as well as fast-moving, more dynamic runtimes—are there for developers. We are frequently involved in the upstream projects for these languages and are usually able to ship bug fixes and CVEs right away in the rpms. This extends to our container images as well, which we patch and repackage for any CVE anywhere in the container, not only if it is in the runtime.&lt;/p&gt; &lt;h3&gt;Developer tooling&lt;/h3&gt; &lt;p&gt;Compilers, performance tools, and language-specific toolkits are all built into RHEL. In RHEL 7, the&lt;a href="https://developers.redhat.com/products/gcc-clang-llvm-go-rust/overview"&gt; /devtools content set in Software Collections&lt;/a&gt; is where you’ll find things like the Developer Toolset (think “gcc and friends”), CLANG &amp;#38; LLVM, Go Toolset, Rust Toolset, and more. This is a set of tools designed for software developers. There’s also the complete set of RHEL container tools—&lt;a href="https://developers.redhat.com/blog/2019/04/25/podman-basics-cheat-sheet/"&gt;Podman, Buildah, and Skopeo&lt;/a&gt;—so you can work on cloud-native container-based apps as well.&lt;/p&gt; &lt;h3&gt;Boring, as a feature&lt;/h3&gt; &lt;p&gt;All of these add up to an operating system that’s … well, sort of boring. Red Hat has made boring a feature. We get excited about delivering platforms that never get exciting. RHEL lets you focus on your development, on making your app exciting for your end users, on delivering your application to your market. If you’re up at 2 a.m. banging on your keyboard, it should be because you’ve had a eureka moment and are in the flow, not because you’re on a deadline and can&amp;#8217;t get something to work because your operating system is getting in the way.&lt;/p&gt; &lt;h2&gt;Usage options&lt;/h2&gt; &lt;p&gt;Like any other Linux distribution, you can use Red Hat Enterprise Linux through the Developer program as a VM or on bare metal—the choice is up to you, and we provide instructions on &lt;a href="https://developers.redhat.com/products/rhel/hello-world"&gt;installing RHEL on a number of hypervisors, as well as how to get it onto a laptop&lt;/a&gt;. Using your Red Hat Developer membership to run RHEL for development on cloud providers—usually in a “bring your own license” option—is also possible.&lt;/p&gt; &lt;p&gt;Download &lt;a href="http://Download RHEL https://developers.redhat.com/products/rhel/download"&gt;Red Hat Enterprise Linux&lt;/a&gt; from Red Hat Developer today.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#38;linkname=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Fwhy-you-should-be-developing-on-red-hat-enterprise-linux%2F&amp;#038;title=Why%20you%20should%20be%20developing%20on%20Red%20Hat%20Enterprise%20Linux" data-a2a-url="https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/" data-a2a-title="Why you should be developing on Red Hat Enterprise Linux"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/"&gt;Why you should be developing on Red Hat Enterprise Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NEs-_Hx4mWQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Red Hat Enterprise Linux through Red Hat Developer is designed specifically so that software can be developed on the same platform to which will be deployed—and here’s why it’s the best option for you. No-cost developer access With a $0 Red Hat Developer membership, you get access to Red Hat Enterprise Linux (RHEL) at no [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/"&gt;Why you should be developing on Red Hat Enterprise Linux&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">3</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">620767</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2019-08-21T07:01:41Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/08/21/why-you-should-be-developing-on-red-hat-enterprise-linux/</feedburner:origLink></entry><entry><title>Reactive Spring Boot programming with Vert.x</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/myfBvoSTH0c/" /><category term="Java" /><category term="Red Hat OpenShift Application Runtimes" /><category term="Spring Boot" /><category term="reactive" /><category term="vert.x" /><author><name>Gytis Trikleris</name></author><id>https://developers.redhat.com/blog/?p=619087</id><updated>2019-08-21T07:00:16Z</updated><published>2019-08-21T07:00:16Z</published><content type="html">&lt;p&gt;The latest bundle of Red Hat supported &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html/spring_boot_2.1.x_runtime_guide/developing-reactive-applications-using-spring-boot-vertx_spring-boot"&gt;Spring Boot starters&lt;/a&gt; was recently released. In addition to supporting the popular Red Hat products for our &lt;a href="https://spring.io/projects/spring-boot"&gt;Spring Boot&lt;/a&gt; customers, the Red Hat Spring Boot team was also busy creating new ones. The most recent technical preview added is a group of Eclipse &lt;a href="https://github.com/snowdrop/vertx-spring-boot"&gt;Vert.x Spring Boot&lt;/a&gt; starters, which provide a Spring-native vocabulary for the popular JVM reactive toolkit.&lt;/p&gt; &lt;p&gt;Let’s quickly go through the main concepts to get everybody on the same page before looking into an example.&lt;span id="more-619087"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;A reactive system as defined in the &lt;a href="https://www.reactivemanifesto.org/"&gt;Reactive Manifesto&lt;/a&gt; is responsive, resilient, elastic, and message-driven. These properties guarantee easy replication, non-blocking communication with high system resources utilization and great fault tolerance. At the latest stage of software evolution, with cloud-first, low-latency, and highly data-intensive applications, reactive systems provide a great value for money.&lt;/p&gt; &lt;p&gt;In our newest release, we have introduced a few &lt;a href="https://docs.spring.io/spring/docs/current/spring-framework-reference/web-reactive.html"&gt;Spring WebFlux&lt;/a&gt; extensions for &lt;a href="https://vertx.io/"&gt;Vert.x&lt;/a&gt;. With these extensions, you can build your application the way you’re used to—using WebFlux and &lt;a href="https://projectreactor.io/"&gt;Project Reactor&lt;/a&gt;—while network communications will be handled by the Vert.x servers and clients.&lt;/p&gt; &lt;p&gt;Implementation of a reactive HTTP layer will get you one step closer to a fully reactive system, but don&amp;#8217;t stop there. In an ideal scenario, your whole system would be reactive. Inter-component communication, data access, cache, and other utilities should support reactive streams and back-pressure to guarantee that your application can withstand whatever is thrown its way. Vert.x provides reactive clients for all of these types of technologies, and we will gradually introduce them into our &lt;a href="https://github.com/snowdrop/vertx-spring-boot"&gt;Vert.x Spring Boot starters bundle&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Let’s look at a few code examples to see how Vert.x could be used in a WebFlux application.&lt;/p&gt; &lt;h2&gt;Message Board Example&lt;/h2&gt; &lt;p&gt;To demonstrate Vert.x WebFlux in action, let&amp;#8217;s create a simple messaging board application. This application consists of two services: messages and dashboard.&lt;/p&gt; &lt;p&gt;Messages service uses a makeshift broker to publish and subscribe to new messages. These two operations are exposed via HTTP REST API as GET and POST operations. GET endpoint returns a JSON objects stream that is updated every time a new message arrives.&lt;/p&gt; &lt;p&gt;Dashboard service uses an HTTP client to request new messages from the messages service and displays them in a dashboard. The dashboard web page is updated live when new messages arrive.&lt;/p&gt; &lt;p&gt;The good news is that Vert.x Spring Boot HTTP starter doesn’t require any code changes for the majority of scenarios, as compared to a default WebFlux application. Our auto-configuration handles beans creation and registration with WebFlux SPI. Thus, the only change needed is a Maven dependency update.&lt;/p&gt; &lt;p&gt;Add our BOM and starter to your application’s &lt;code&gt;pom.xml&lt;/code&gt;.&lt;/p&gt; &lt;pre class="brush: xml; title: ; notranslate"&gt; &amp;#60;dependencyManagement&amp;#62; &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;me.snowdrop&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;spring-boot-bom&amp;#60;/artifactId&amp;#62; &amp;#60;version&amp;#62;2.1.6.Final&amp;#60;/version&amp;#62; &amp;#60;type&amp;#62;pom&amp;#60;/type&amp;#62; &amp;#60;scope&amp;#62;import&amp;#60;/scope&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;!-- Other application specific dependencies --&amp;#62; &amp;#60;/dependencies&amp;#62; &amp;#60;/dependencyManagement&amp;#62; &amp;#60;dependencies&amp;#62; &amp;#60;dependency&amp;#62; &amp;#60;groupId&amp;#62;dev.snowdrop&amp;#60;/groupId&amp;#62; &amp;#60;artifactId&amp;#62;vertx-spring-boot-starter-http&amp;#60;/artifactId&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;!-- Other application specific dependencies --&amp;#62; &amp;#60;/dependencies&amp;#62; &lt;/pre&gt; &lt;h3&gt;Message Service&lt;/h3&gt; &lt;p&gt;There are two ways to define HTTP endpoints in a WebFlux application. Messages service uses functional endpoints, which allow a functional programming style. Dashboard, however, uses traditional Spring MVC style annotated controllers.&lt;/p&gt; &lt;p&gt;When working with functional endpoints, we need to define handler functions that are then invoked by a router function. First, let&amp;#8217;s implement a GET handler, which will subscribe to a broker and return a stream of messages.&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Mono&amp;#60;ServerResponse&amp;#62; getHandler(MessagesBroker broker) { return ok() .contentType(APPLICATION_STREAM_JSON) .body(broker.subscribe(), Message.class); } &lt;/pre&gt; &lt;p&gt;Then, let’s define a POST handler, which will receive new messages and publish them to the broker.&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; private Mono&amp;#60;ServerResponse&amp;#62; postHandler(ServerRequest request, MessagesBroker broker) { Mono&amp;#60;Message&amp;#62; messageMono = request .bodyToMono(Message.class) .doOnNext(broker::publish); return accepted() .contentType(APPLICATION_JSON) .body(messageMono, Message.class); } &lt;/pre&gt; &lt;p&gt;Finally, let’s create a router function, which will map HTTP requests to the correct handlers.&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; @Bean public RouterFunction&amp;#60;ServerResponse&amp;#62; router(MessagesBroker broker) { return route() .GET(&amp;#34;/&amp;#34;, accept(APPLICATION_STREAM_JSON), r -&amp;#62; getHandler(broker)) .POST(&amp;#34;/&amp;#34;, request -&amp;#62; postHandler(request, broker)) .build(); } &lt;/pre&gt; &lt;p&gt;As you can see in this code example, handlers delegate message handling to a broker component which implements the main logic of messages distribution. For this example, it is just a simple Flux generator. In a real-world scenario, however, it would be replaced by an actual message broker, such as Red Hat AMQ.&lt;/p&gt; &lt;h3&gt;Dashboard&lt;/h3&gt; &lt;p&gt;Dashboard implements two controllers using the Spring MVC style. The first one renders an HTML page with the message board. The second controller provides a GET endpoint, which is used by the HTML page to receive messages as server-sent events.&lt;/p&gt; &lt;p&gt;Here’s a controller for the index page.&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; @Controller public class DashboardController { @GetMapping(&amp;#34;/&amp;#34;) public String home() { return &amp;#34;index&amp;#34;; } } &lt;/pre&gt; &lt;p&gt;The messages endpoint is a little bit more complex. It injects a web client builder and creates a Vert.x WebFlux web client. It uses this client to retrieve new messages from the messages service and forwards them to the web page.&lt;/p&gt; &lt;p&gt;Here’s the implementation of the messages controller.&lt;/p&gt; &lt;pre class="brush: java; title: ; notranslate"&gt; @RestController public class MessagesController { private static final String MESSAGES_SERVICE_URL = &amp;#34;http://localhost:8081&amp;#34;; private final WebClient webClient; public MessagesController(WebClient.Builder webClientBuilder) { this.webClient = webClientBuilder .baseUrl(MESSAGES_SERVICE_URL) .build(); } @GetMapping(path = &amp;#34;/messages&amp;#34;, produces = TEXT_EVENT_STREAM_VALUE) public Flux&amp;#60;Message&amp;#62; getMessages() { return webClient .get() .accept(APPLICATION_STREAM_JSON) .retrieve() .bodyToFlux(Message.class); } } &lt;/pre&gt; &lt;p&gt;If you start both applications and open your browser at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;, you would first see an empty page. Leave it open and send a few messages from your terminal. Note that our demo broker doesn’t provide persistence, so only messages received while the dashboard is open will be presented.&lt;/p&gt; &lt;p&gt;Post a couple of messages from your terminal.&lt;/p&gt; &lt;pre&gt;$ http POST :8081 sender=John text="Hello, World" $ http POST :8081 sender=John text="Hello again" &lt;/pre&gt; &lt;p&gt;Now the dashboard should have two messages in it.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-619107 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/08/vertx-spring-boot-blog-screenshot-1024x485.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/08/vertx-spring-boot-blog-screenshot-300x142.png" alt="" width="300" height="142" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/08/vertx-spring-boot-blog-screenshot-300x142.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2019/08/vertx-spring-boot-blog-screenshot-768x364.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2019/08/vertx-spring-boot-blog-screenshot-1024x485.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2019/08/vertx-spring-boot-blog-screenshot.png 1114w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Please check out the Vert.x Spring Boot project at our &lt;a href="https://github.com/snowdrop/vertx-spring-boot"&gt;GitHub repository&lt;/a&gt;. We would appreciate your input and pull requests. The latest release also includes features that are not covered in this article, such as WebSockets and mail client, so check out the samples to learn more.&lt;/p&gt; &lt;p&gt;In the upcoming releases, we plan to introduce AMQP 1.0 and Kafka clients to provide reactive messaging between your services.&lt;/p&gt; &lt;h3&gt;See more&lt;/h3&gt; &lt;ul&gt; &lt;li&gt;Full example code: &lt;a href="https://github.com/gytis/vertx-spring-boot-message-board-example"&gt;https://github.com/gytis/vertx-spring-boot-message-board-example&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Project repository: &lt;a href="https://github.com/snowdrop/vertx-spring-boot"&gt;https://github.com/snowdrop/vertx-spring-boot&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#38;linkname=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F21%2Freactive-spring-boot-programming-with-vert-x%2F&amp;#038;title=Reactive%20Spring%20Boot%20programming%20with%20Vert.x" data-a2a-url="https://developers.redhat.com/blog/2019/08/21/reactive-spring-boot-programming-with-vert-x/" data-a2a-title="Reactive Spring Boot programming with Vert.x"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/21/reactive-spring-boot-programming-with-vert-x/"&gt;Reactive Spring Boot programming with Vert.x&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/myfBvoSTH0c" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;The latest bundle of Red Hat supported Spring Boot starters was recently released. In addition to supporting the popular Red Hat products for our Spring Boot customers, the Red Hat Spring Boot team was also busy creating new ones. The most recent technical preview added is a group of Eclipse Vert.x Spring Boot starters, which [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/21/reactive-spring-boot-programming-with-vert-x/"&gt;Reactive Spring Boot programming with Vert.x&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/08/21/reactive-spring-boot-programming-with-vert-x/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">619087</post-id><dc:creator>Gytis Trikleris</dc:creator><dc:date>2019-08-21T07:00:16Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/08/21/reactive-spring-boot-programming-with-vert-x/</feedburner:origLink></entry><entry><title>New website for Apache Camel</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/E-v6jUgYyI4/new-website-for-apache-camel.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-new_website_for_apache_camel</id><updated>2019-08-21T04:20:39Z</updated><published>2019-08-21T04:20:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Yesterday we published the new website for &lt;a href="https://camel.apache.org/"&gt;Apache Camel&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://camel.apache.org/"&gt;&lt;img border="0" data-original-height="739" data-original-width="1420" height="207" src="https://1.bp.blogspot.com/-rx6zt4O_spo/XVzGDkRszxI/AAAAAAAAB9k/3A4B8jJqrw0o7MBNhviRkqzPzj1vNRIGACLcBGAs/s400/Screenshot%2B2019-08-21%2Bat%2B06.15.03.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;It's really fantastic to finally see a new website. And now with a modern tech for the website we can much easier update and keep it more modern for the future, and also it should help encourage users to contribute to its content to help build a better user guide.&lt;br /&gt;&lt;br /&gt;Huge thanks to all involved.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Obxb60LZ25g:BWb2Mt1NwL4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Obxb60LZ25g:BWb2Mt1NwL4:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=Obxb60LZ25g:BWb2Mt1NwL4:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Obxb60LZ25g:BWb2Mt1NwL4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=Obxb60LZ25g:BWb2Mt1NwL4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=Obxb60LZ25g:BWb2Mt1NwL4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=Obxb60LZ25g:BWb2Mt1NwL4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/Obxb60LZ25g" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/E-v6jUgYyI4" height="1" width="1" alt=""/&gt;</content><summary>Yesterday we published the new website for Apache Camel. It's really fantastic to finally see a new website. And now with a modern tech for the website we can much easier update and keep it more modern for the future, and also it should help encourage users to contribute to its content to help build a better user guide. Huge thanks to all involved.</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2019-08-21T04:20:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/Obxb60LZ25g/new-website-for-apache-camel.html</feedburner:origLink></entry><entry><title>DevNation Live: Plumbing Kubernetes builds | Deploy with Tekton</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/kUDrXKcy9k8/" /><category term="DevNation" /><category term="Kubernetes" /><category term="Tekton" /><category term="DevNation Live" /><category term="kubernetes" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=620247</id><updated>2019-08-20T07:00:29Z</updated><published>2019-08-20T07:00:29Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt;DevNation Live tech talks&lt;/a&gt; are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you&amp;#8217;ll learn about &lt;a href="https://tekton.dev/"&gt;Tekton&lt;/a&gt;, a &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt;-native way of defining and running CI/CD,  from &lt;a href="https://developers.redhat.com/blog/author/kameshsampath/"&gt;Kamesh Sampath&lt;/a&gt;, Principal Software Engineer at Red Hat.&lt;span id="more-620247"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;The session explores the characteristics of Tekton, which is cloud-native, decoupled, and declarative. This demo-filled session will show how to combine various building blocks of Tekton to build and deploy (Tasks and Pipelines) a Kubernetes application.&lt;/p&gt; &lt;p&gt;Watch the complete video:&lt;/p&gt; &lt;p&gt;&lt;iframe src="https://www.youtube.com/embed/q5P2V_YShjA" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://slidr.io/kameshsampath/plumbing-kubernetes-builds-deploy-with-tekton#1"&gt;Link to slides&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;Learn more&lt;/h3&gt; &lt;p class="selectionShareable"&gt;Join us at an upcoming &lt;a href="https://developers.redhat.com/events/"&gt;developer event&lt;/a&gt;, and see our collection of &lt;a href="https://developers.redhat.com/devnation/?page=0"&gt;past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#38;linkname=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F20%2Fdevnation-live-plumbing-kubernetes-builds-deploy-with-tekton%2F&amp;#038;title=DevNation%20Live%3A%20Plumbing%20Kubernetes%20builds%20%7C%20Deploy%20with%20Tekton" data-a2a-url="https://developers.redhat.com/blog/2019/08/20/devnation-live-plumbing-kubernetes-builds-deploy-with-tekton/" data-a2a-title="DevNation Live: Plumbing Kubernetes builds | Deploy with Tekton"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/20/devnation-live-plumbing-kubernetes-builds-deploy-with-tekton/"&gt;DevNation Live: Plumbing Kubernetes builds | Deploy with Tekton&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/kUDrXKcy9k8" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;DevNation Live tech talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you&amp;#8217;ll learn about Tekton, a Kubernetes-native way of defining and running CI/CD,  from Kamesh Sampath, Principal Software Engineer at Red Hat. The [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/20/devnation-live-plumbing-kubernetes-builds-deploy-with-tekton/"&gt;DevNation Live: Plumbing Kubernetes builds | Deploy with Tekton&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/08/20/devnation-live-plumbing-kubernetes-builds-deploy-with-tekton/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">620247</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-08-20T07:00:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/08/20/devnation-live-plumbing-kubernetes-builds-deploy-with-tekton/</feedburner:origLink></entry><entry><title>5 Questions Everyone's Asking About Microservices (Question 2)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Qm3xER9JR64/5-questions-everyones-asking-about-microservices-question2.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="best practices" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="JBossAMQ" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-5_questions_everyone_s_asking_about_microservices_question_2</id><updated>2019-08-20T05:00:10Z</updated><published>2019-08-20T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://1.bp.blogspot.com/-i6x1EOlxWyE/XVQFqTEqWhI/AAAAAAAAvLk/4p4gtw-bjm4BQAwWePd4zeAQ0Vbg3984ACLcBGAs/s1600/questions.jpg" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="666" data-original-width="1000" height="213" src="https://1.bp.blogspot.com/-i6x1EOlxWyE/XVQFqTEqWhI/AAAAAAAAvLk/4p4gtw-bjm4BQAwWePd4zeAQ0Vbg3984ACLcBGAs/s320/questions.jpg" width="320" /&gt;&lt;/a&gt;When discussing the development impact on existing applications while transitioning to microservices, there are five questions that keep popping up in one form or another. They are the same regardless of the size of the organization and seem to become part of strategy discussions later in the process as organizations move towards microservice architectures. &lt;br /&gt;&lt;br /&gt;These articles cover questions that everyone should ask about microservices. Their based on experiences from interactions with organizations in the process of conquering microservices for existing development and for delivering modern applications.&lt;br /&gt;&amp;nbsp;Previously I covered the first question around &lt;a href="http://www.schabell.org/2019/08/5-questions-everyones-asking-about-microservices-question1.html" target="_blank"&gt;the performance impact of microservices&lt;/a&gt;. In this second article I'll take a look at dealing with state after splitting up monolithic applications.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;h3 style="text-align: left;"&gt;State and monoliths&lt;/h3&gt;&lt;div style="text-align: left;"&gt;After the initial discussion around the first question, it’s usually followed by issues of how to deal with state in a monolithic application.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;“How to deal with services that get split off from their monolith usage and are stateful, where we want to use the benefits of a container platform like OpenShift?”&lt;/i&gt;&lt;br /&gt;There are two types of &lt;i&gt;stateful&lt;/i&gt; in relation to applications:&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;Building a business application that uses either in-memory state or database state.&lt;/li&gt;&lt;li&gt;Building a specific database engine and need highly performant, even low-level, access to the underlying disk. &lt;/li&gt;&lt;/ol&gt;The first option is the mainstream way of developing and deploying cloud-native applications with their &lt;i&gt;stateful&lt;/i&gt; components, while still splitting out microservices, using a container platform like OpenShift based on Kubernetes. &lt;br /&gt;&lt;br /&gt;Option two is another story and is often best left to specialized vendors. This is because these types of solutions can go deep enough to involve maintaining extensions to operating system kernels themselves. It makes more sense to focus on your domain specific business value and delivering that to your customers. &lt;br /&gt;&amp;nbsp;&lt;/div&gt;&lt;div style="text-align: left;"&gt;Next time in this series of articles, a look at dealing with data across a distributed microservices architecture.&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="text-align: left;"&gt;&lt;span style="font-size: small;"&gt;&lt;i&gt;(article co-authored with &lt;a href="https://twitter.com/burrsutter" target="_blank"&gt;Burr Sutter) &lt;/a&gt;&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1cs_A0DC-fA:ULivhgFycAU:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1cs_A0DC-fA:ULivhgFycAU:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1cs_A0DC-fA:ULivhgFycAU:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1cs_A0DC-fA:ULivhgFycAU:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1cs_A0DC-fA:ULivhgFycAU:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/1cs_A0DC-fA" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Qm3xER9JR64" height="1" width="1" alt=""/&gt;</content><summary>When discussing the development impact on existing applications while transitioning to microservices, there are five questions that keep popping up in one form or another. They are the same regardless of the size of the organization and seem to become part of strategy discussions later in the process as organizations move towards microservice architectures. These articles cover questions that ever...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-08-20T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/1cs_A0DC-fA/5-questions-everyones-asking-about-microservices-question2.html</feedburner:origLink></entry><entry><title>Get started with Eclipse Che 7 and Quarkus: An overview</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lspvcX2wqII/" /><category term="Eclipse Che" /><category term="Java" /><category term="Quarkus" /><category term="Eclipse Che 7" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=619147</id><updated>2019-08-19T07:00:22Z</updated><published>2019-08-19T07:00:22Z</published><content type="html">&lt;p&gt;In this short video tutorial, hosted by Doug Tidwell, we&amp;#8217;ll take a look at the new &lt;a href="https://developers.redhat.com/blog/2019/03/11/eclipse-che-overview/"&gt;Eclipse Che 7&lt;/a&gt; interface along with &lt;a href="https://developers.redhat.com/blog/2019/05/09/create-your-first-quarkus-project-with-eclipse-ide-red-hat-codeready-studio/"&gt;Quarkus&lt;/a&gt;, the revolutionary new technology that can make Java applications very small and very fast.&lt;span id="more-619147"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;In the course of this demo, we&amp;#8217;ll show how to set up a running workspace and run a simple app. To get started, we&amp;#8217;ll also be using &lt;a href="http://github.com/kubernetes/minikube/releases/"&gt;Minikube version 1.2.0 &lt;/a&gt;and &lt;a href="https://github.com/helm/helm/releases/"&gt;Helm version 2.14.1&lt;/a&gt;, both of which you&amp;#8217;ll need to have installed. For Che 7, we&amp;#8217;re using the &lt;a href="http://eclipse.org/che/docs/che-7/che-quick-starts.html#deploying-che-using-chectl"&gt;chectl tool&lt;/a&gt;; note that we&amp;#8217;re using the July 30 build of chectl version 0.0.2. Finally, we assume you have wget installed as part of your operating system.&lt;/p&gt; &lt;p&gt;Follow along with the demo and see the power of Quarkus in action.&lt;/p&gt; &lt;p&gt;Watch the complete video below:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/3yaLcbFQhcY" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#38;linkname=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F08%2F19%2Fget-started-with-eclipse-che-7-and-quarkus-an-overview%2F&amp;#038;title=Get%20started%20with%20Eclipse%20Che%207%20and%20Quarkus%3A%20An%20overview" data-a2a-url="https://developers.redhat.com/blog/2019/08/19/get-started-with-eclipse-che-7-and-quarkus-an-overview/" data-a2a-title="Get started with Eclipse Che 7 and Quarkus: An overview"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/19/get-started-with-eclipse-che-7-and-quarkus-an-overview/"&gt;Get started with Eclipse Che 7 and Quarkus: An overview&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lspvcX2wqII" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this short video tutorial, hosted by Doug Tidwell, we&amp;#8217;ll take a look at the new Eclipse Che 7 interface along with Quarkus, the revolutionary new technology that can make Java applications very small and very fast. In the course of this demo, we&amp;#8217;ll show how to set up a running workspace and run a [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/08/19/get-started-with-eclipse-che-7-and-quarkus-an-overview/"&gt;Get started with Eclipse Che 7 and Quarkus: An overview&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/08/19/get-started-with-eclipse-che-7-and-quarkus-an-overview/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">619147</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-08-19T07:00:22Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/08/19/get-started-with-eclipse-che-7-and-quarkus-an-overview/</feedburner:origLink></entry><entry><title>DevConf.US 2019 - 7 Steps to Expanding Your AppDev Toolbox (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/U79bps4jr8Y/devconfus-2019-7-steps-to-expanding-appdev-toolbox-slides.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-devconf_us_2019_7_steps_to_expanding_your_appdev_toolbox_slides</id><updated>2019-08-17T18:30:06Z</updated><published>2019-08-17T18:30:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;"&gt;&lt;a href="https://devconf.info/us/" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="542" data-original-width="1186" height="146" src="https://2.bp.blogspot.com/-T6LZWIuPP5o/XHexg0Gq2XI/AAAAAAAAteo/pbLc5j5pqoQiZvEAZ_YdvW9M9DN3oMqeACLcBGAs/s320/Screenshot%2B2019-02-28%2Bat%2B11.01.22.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;a href="https://www.schabell.org/2019/04/devconfus-2019-open-source-career-with-automation-integration.html" target="_blank"&gt;Previously&lt;/a&gt; I talked about&amp;nbsp;&lt;a href="http://www.schabell.org/2018/04/devconus-2018-process-driven-developement-cloud-containers.html" target="_blank"&gt;submitting to DevConf.us in Boston&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;This week I was in Boston presenting &lt;a href="http://www.schabell.org/2019/06/devconfus-2019-open-source-career-with-automation-integration-acceptances.html" target="_blank"&gt;three talks that got accepted&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;It was a lot of fun and happy to see so many faces of friend, to meet so many eager new developers, and to share the stories I have to tell.&lt;br /&gt;&lt;br /&gt;Below are the slides from the talk I gave on 7 steps to expanding your application development toolbox.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;First the slides and then the abstract:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/yjZlsMQgVs3HfL" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://devconfus2019.sched.com/event/RFCn/7-steps-to-expanding-your-appdev-toolbox" target="_blank"&gt;7 Steps to Expanding Your AppDev Toolbox&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;Are you ready to add automation to your development toolbox? Are you looking to integrate processes in your application development projects but not sure&amp;nbsp; where to start? Do the process integration tools intimidate you a little? No worries, we've got the easiest way to spin up your knowledge around process integration using open source technologies. Take a tour with us and learn how in 7 easy steps you can soar to new heights by adding these new skills to your AppDev toolbox. You'll walk away from this session with the learning path to integrating automation in to your next project. This session content provides all materials free, online, and available in easy to follow hands-on format. Attendees can head homeward after this session and continue advancing their skills at their own pace.&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Thanks for attending and feel free to reach out via this sites contact form if you have any questions or comments. &lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=QTQiPesBWiQ:s2963gH59mQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=QTQiPesBWiQ:s2963gH59mQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=QTQiPesBWiQ:s2963gH59mQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=QTQiPesBWiQ:s2963gH59mQ:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=QTQiPesBWiQ:s2963gH59mQ:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/QTQiPesBWiQ" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/U79bps4jr8Y" height="1" width="1" alt=""/&gt;</content><summary>Previously I talked about submitting to DevConf.us in Boston. This week I was in Boston presenting three talks that got accepted. It was a lot of fun and happy to see so many faces of friend, to meet so many eager new developers, and to share the stories I have to tell. Below are the slides from the talk I gave on 7 steps to expanding your application development toolbox. First the slides and then...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-08-17T18:30:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/QTQiPesBWiQ/devconfus-2019-7-steps-to-expanding-appdev-toolbox-slides.html</feedburner:origLink></entry><entry><title>DevConf.US 2019 - How to Jump Start Your Career in Open Source (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/z6TgiVsQRBE/devconfus-2019-how-to-jump-start-your-career-in-open-source-slides.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="conference" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-devconf_us_2019_how_to_jump_start_your_career_in_open_source_slides</id><updated>2019-08-17T17:40:02Z</updated><published>2019-08-17T17:40:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://devconf.info/us/" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img border="0" data-original-height="542" data-original-width="1186" height="146" src="https://2.bp.blogspot.com/-T6LZWIuPP5o/XHexg0Gq2XI/AAAAAAAAteo/pbLc5j5pqoQiZvEAZ_YdvW9M9DN3oMqeACLcBGAs/s320/Screenshot%2B2019-02-28%2Bat%2B11.01.22.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;a href="https://www.schabell.org/2019/04/devconfus-2019-open-source-career-with-automation-integration.html" target="_blank"&gt;Previously&lt;/a&gt; I talked about&amp;nbsp;&lt;a href="http://www.schabell.org/2018/04/devconus-2018-process-driven-developement-cloud-containers.html" target="_blank"&gt;submitting to DevConf.us in Boston&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;This week I was in Boston presenting &lt;a href="http://www.schabell.org/2019/06/devconfus-2019-open-source-career-with-automation-integration-acceptances.html" target="_blank"&gt;three talks that got accepted&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;It was a lot of fun and happy to see so many faces of friend, to meet so many eager new developers, and to share the stories I have to tell.&lt;br /&gt;&lt;br /&gt;Below are the slides from the talk I gave on how to jump start your career in open source.&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;First the slides and then the abstract:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/ipVFFZ2sYfbse" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://devconfus2019.sched.com/event/RFDr/how-to-jump-start-your-career-in-open-source" target="_blank"&gt;How to Jump Start Your Career in Open Source&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;It's not coincidence. It's not luck. It's not going to happen by itself, so what's the secret sauce? Understanding what makes a career in open source grow, what choices are crucial, and what actions accelerate or damage your open source future are sometimes hard to grasp. Learning to position, expand and grow your personal brand in the open source world is what this session provides. Be ready for your next step in open source. Join me for an hour of power where you'll be given a clear and easy to use plan for jump starting your open source career immediately. &lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Thanks for attending and feel free to reach out via this sites contact form if you have any questions or comments.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=4D8dlY0mNTo:pkgcu6asmJk:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=4D8dlY0mNTo:pkgcu6asmJk:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=4D8dlY0mNTo:pkgcu6asmJk:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=4D8dlY0mNTo:pkgcu6asmJk:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=4D8dlY0mNTo:pkgcu6asmJk:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/4D8dlY0mNTo" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/z6TgiVsQRBE" height="1" width="1" alt=""/&gt;</content><summary>Previously I talked about submitting to DevConf.us in Boston. This week I was in Boston presenting three talks that got accepted. It was a lot of fun and happy to see so many faces of friend, to meet so many eager new developers, and to share the stories I have to tell. Below are the slides from the talk I gave on how to jump start your career in open source. First the slides and then the abstract...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-08-17T17:40:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/4D8dlY0mNTo/devconfus-2019-how-to-jump-start-your-career-in-open-source-slides.html</feedburner:origLink></entry></feed>
